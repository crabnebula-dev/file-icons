name: CI

on:
  push:
    paths:
      - ".github/workflows/ci.yml"
      - "**/*.rs"
      - "**/Cargo.toml"
  pull_request:
    paths:
      - ".github/workflows/ci.yml"
      - "**/*.rs"
      - "**/Cargo.toml"

permissions:
  contents: read

env:
  RUSTFLAGS: -Dwarnings

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre_ci:
    uses: dtolnay/.github/.github/workflows/pre_ci.yml@master

  check:
    name: Rust Check
    needs: pre_ci
    if: needs.pre_ci.outputs.continue
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
      - run: cargo check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    needs: pre_ci
    if: needs.pre_ci.outputs.continue
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy -- -Dclippy::all -Dclippy::pedantic

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    needs: pre_ci
    if: needs.pre_ci.outputs.continue
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - name: Install rustfmt with nightly toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check

  e2e:
    name: E2E tests
    runs-on: ubuntu-latest
    needs:
      - pre_ci
      - check
    if: needs.pre_ci.outputs.continue
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v3
      - uses: browser-actions/setup-firefox@v1
      - name: Install rustfmt with nightly toolchain
        uses: dtolnay/rust-toolchain@nightly
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm build
      - name: Run E2E tests
        run: pnpm test:e2e
